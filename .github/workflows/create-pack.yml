name: Create Pack (manual version & build_type + SHA1 only on Release)

on:
  push:
    branches:
      - '**'
    tags:
      - '**'

# Change the information to the current version of the resource pack.
env:
  PROJECT_VERSION: "0.0.1"
  BUILD_TYPE: "release"  # Options: alpha, beta, release.

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6.4

      - name: Prepare names, validate build_type and export env
        run: |
          echo "PROJECT_VERSION (from env): $PROJECT_VERSION"
          echo "BUILD_TYPE (from env): $BUILD_TYPE"

          BUILD_TYPE_LOWER="$(echo "$BUILD_TYPE" | tr '[:upper:]' '[:lower:]')"

          case "$BUILD_TYPE_LOWER" in
            alpha|beta|release)
              FINAL_BUILD_TYPE="$BUILD_TYPE_LOWER"
              ;;
            *)
              echo "WARN: BUILD_TYPE '$BUILD_TYPE' is not one of (alpha,beta,release). Falling back to 'experimental'."
              FINAL_BUILD_TYPE="experimental"
              ;;
          esac

          BRANCH='${{ steps.branch-name.outputs.current_branch }}'
          SAFE_BRANCH="${BRANCH//\//-}"

          ZIP_NAME="bedrockflavor-${PROJECT_VERSION}-${FINAL_BUILD_TYPE}.zip"
          ARTIFACT_BASE="${ZIP_NAME%.zip}"

          SHORT_SHA="${GITHUB_SHA:0:7}"
          RELEASE_NAME="BedrockFlavor ${PROJECT_VERSION} - ${FINAL_BUILD_TYPE^}"
          RELEASE_DESC="Release made from the commit: ${SHORT_SHA}"

          echo "FINAL_BUILD_TYPE=$FINAL_BUILD_TYPE" >> $GITHUB_ENV
          echo "SAFE_BRANCH=$SAFE_BRANCH" >> $GITHUB_ENV
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          echo "ARTIFACT_BASE=$ARTIFACT_BASE" >> $GITHUB_ENV
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_DESC=$RELEASE_DESC" >> $GITHUB_ENV

      - name: Build .zip
        run: |
          mkdir -p build
          if [ ! -d assets ]; then
            echo "ERROR: assets/ not found" >&2
            exit 1
          fi
          if [ ! -f pack.mcmeta ]; then
            echo "ERROR: pack.mcmeta not found" >&2
            exit 1
          fi
          if [ ! -f LICENSE ]; then
            echo "ERROR: LICENSE not found" >&2
            exit 1
          fi
          if [ ! -f pack.png ]; then
            echo "ERROR: pack.png not found" >&2
            exit 1
          fi
          zip -r "build/${ZIP_NAME}" assets LICENSE pack.mcmeta pack.png


      - name: Compute SHA1 for the .zip
        run: |
          sha1sum "build/${ZIP_NAME}" > "build/${ZIP_NAME}.sha1"
          echo "SHA1 created (build/${ZIP_NAME}.sha1):"
          cat "build/${ZIP_NAME}.sha1"

      - name: Create artifact (alpha/beta only)
        if: ${{ env.FINAL_BUILD_TYPE == 'alpha' || env.FINAL_BUILD_TYPE == 'beta' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_BASE }}
          path: |
            assets
            LICENSE
            pack.mcmeta
            pack.png
          retention-days: 14

      - name: Create release (+SHA1)
        if: ${{ env.FINAL_BUILD_TYPE == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.PROJECT_VERSION }}"
          name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_DESC }}
          files: |
            build/${{ env.ZIP_NAME }}
            build/${{ env.ZIP_NAME }}.sha1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}